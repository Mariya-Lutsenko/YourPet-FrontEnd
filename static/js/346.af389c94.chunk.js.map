{"version":3,"file":"static/js/346.af389c94.chunk.js","mappings":"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","sources":["webpack://your-pet-frontend/./src/modules/LoginForm/loginFormDetails.module.css?1418","modules/LoginForm/LoginFormDetails.jsx","modules/LoginForm/LoginForm.jsx","webpack://your-pet-frontend/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"loginFormDetails_form__LwEfY\",\"title\":\"loginFormDetails_title__T9-5m\",\"questionText\":\"loginFormDetails_questionText__n6Ojt\",\"registerLink\":\"loginFormDetails_registerLink__jYgjs\",\"buttonContainer\":\"loginFormDetails_buttonContainer__TyGgH\",\"button\":\"loginFormDetails_button__WhIag\",\"myСomponent\":\"loginFormDetails_myСomponent__rPtb8\",\"dark\":\"loginFormDetails_dark__Y3T6I\"};","import { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { ThemeContext } from 'shared/hooks/context/ThemeProvider';\n\nimport { Formik, Form } from 'formik';\nimport * as yup from 'yup';\n\nimport { TextField, IconButton, Box } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { blue } from '@mui/material/colors';\n\nimport css from './loginFormDetails.module.css';\n\nimport { login } from 'redux/auth/auth-operations';\n\nconst registerSchema = yup.object({\n  email: yup.string().email('Invalid email').required('Enter a valid Email'),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be at most 16 characters')\n    .matches(\n      /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])([0-9a-zA-Z]{6,})*$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n});\n\nconst data = {\n  email: '',\n  password: '',\n};\n\nexport const LoginFormDetails = () => {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const { theme } = useContext(ThemeContext);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = async values => {\n    const data = {\n      email: values.email,\n      password: values.password,\n    };\n    await dispatch(login(data));\n    navigate('/user');\n  };\n\n  return (\n    <>\n      <div\n        className={`${css.myСomponent} ${\n          theme === 'light' ? css.light : css.dark\n        }`}\n      >\n        <Formik\n          initialValues={data}\n          onSubmit={handleFormSubmit}\n          validationSchema={registerSchema}\n        >\n          {({ values, errors, touched, handleSubmit, handleChange }) => (\n            <Form className={css.form} onSubmit={handleSubmit}>\n              <h2 className={css.title}>Login</h2>\n              <Box\n                sx={{\n                  marginBottom: '10px',\n                  display: 'flex',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <TextField\n                  name=\"email\"\n                  type=\"email\"\n                  label=\"Email\"\n                  size=\"small\"\n                  fullWidth\n                  sx={{\n                    '.MuiInputBase-root.MuiOutlinedInput-root': {\n                      borderRadius: '40px',\n                    },\n                    '& .MuiInputLabel-root': {\n                      color: theme === 'dark' && '#b2abab',\n                    },\n                    '& .MuiInputLabel-root.Mui-focused': {\n                      color: theme === 'light' ? '#54ADFF' : '#183a3d',\n                    },\n                    '& .MuiOutlinedInput-root': {\n                      '& fieldset': {\n                        borderRadius: 40,\n                        border: `1px solid ${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n                      '&:hover fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#d9d2d2'\n                        }`,\n                      },\n                      '&.Mui-focused fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                        borderWidth: '2px',\n                      },\n                      '& .MuiInputBase-input': {\n                        color: theme === 'dark' && '#d9d2d2',\n                      },\n                    },\n                  }}\n                  onChange={handleChange}\n                  value={values.email}\n                  error={touched.email && Boolean(errors.email)}\n                  helperText={touched.email && errors.email}\n                />\n              </Box>\n              <Box\n                sx={{\n                  marginBottom: '10px',\n                  display: 'flex',\n                  alignItems: 'flex-end',\n                }}\n              >\n                <TextField\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  label=\"Password\"\n                  size=\"small\"\n                  fullWidth\n                  sx={{\n                    '.MuiInputBase-root.MuiOutlinedInput-root': {\n                      borderRadius: '40px',\n                    },\n                    '& .MuiInputLabel-root': {\n                      color: theme === 'dark' && '#b2abab',\n                    },\n                    '& .MuiInputLabel-root.Mui-focused': {\n                      color: theme === 'light' ? '#54ADFF' : '#183a3d',\n                    },\n                    '& .MuiOutlinedInput-root': {\n                      '& fieldset': {\n                        borderRadius: 40,\n                        border: `1px solid ${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                      },\n                      '&:hover fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#d9d2d2'\n                        }`,\n                      },\n                      '&.Mui-focused fieldset': {\n                        borderColor: `${\n                          theme === 'light' ? '#54ADFF' : '#2f5a5f'\n                        }`,\n                        borderWidth: '2px',\n                      },\n                      '& .MuiInputBase-input': {\n                        color: theme === 'dark' && '#d9d2d2',\n                      },\n                    },\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        edge=\"end\"\n                        size=\"small\"\n                      >\n                        {showPassword ? (\n                          <Visibility\n                            style={{\n                              color: theme === 'dark' ? '#2f5a5f' : blue[300],\n                            }}\n                          />\n                        ) : (\n                          <VisibilityOff\n                            style={{\n                              color: theme === 'dark' ? '#2f5a5f' : blue[300],\n                            }}\n                          />\n                        )}\n                        {}\n                      </IconButton>\n                    ),\n                  }}\n                  onChange={handleChange}\n                  value={values.password}\n                  error={touched.password && Boolean(errors.password)}\n                  helperText={touched.password && errors.password}\n                />\n              </Box>\n              <div className={css.buttonContainer}>\n                <button type=\"submit\" className={css.button}>\n                  Login\n                </button>\n              </div>\n              <p className={css.questionText}>\n                Don't have an account?{' '}\n                <Link to=\"/register\" className={css.registerLink}>\n                  Register\n                </Link>\n              </p>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectIsLoading, selectIsLoggedIn } from 'redux/auth/auth-selectors';\n\nimport Loader from 'shared/components/Loader/Loader';\n\nimport { LoginFormDetails } from './LoginFormDetails';\n\nconst LoginForm = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  return (\n    <>\n      {isLoading && <Loader /> }\n      {isLoading && isLoggedIn && <Loader />}\n      <LoginFormDetails />\n    </>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionMain\":\"LoginPage_sectionMain__QsrbE\",\"myСomponent\":\"LoginPage_myСomponent__iJ-J3\",\"dark\":\"LoginPage_dark__UXzbr\"};","import { useContext } from 'react';\nimport { ThemeContext } from '../../shared/hooks/context/ThemeProvider';\n\nimport LoginForm from 'modules/LoginForm/LoginForm';\nimport css from './LoginPage.module.css';\n\nconst LoginPage = () => {\n  const { theme } = useContext(ThemeContext);\n\n  return (\n    <div\n      className={`${css.myСomponent} ${\n        theme === 'light' ? css.light : css.dark\n      }`}\n    >\n      <section className={css.sectionMain}>\n        <div className=\"container\">\n          <LoginForm />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["registerSchema","yup","email","required","password","min","max","matches","data","LoginFormDetails","navigate","useNavigate","useState","showPassword","setShowPassword","theme","useContext","ThemeContext","handleClickShowPassword","show","dispatch","useDispatch","handleFormSubmit","values","login","className","css","initialValues","onSubmit","validationSchema","errors","touched","handleSubmit","handleChange","Box","sx","marginBottom","display","alignItems","TextField","name","type","label","size","fullWidth","borderRadius","color","border","borderColor","borderWidth","onChange","value","error","Boolean","helperText","InputProps","endAdornment","IconButton","onClick","edge","Visibility","style","blue","VisibilityOff","to","isLoading","useSelector","selectIsLoading","isLoggedIn","selectIsLoggedIn","Loader"],"sourceRoot":""}